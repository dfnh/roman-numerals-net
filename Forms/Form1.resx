<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AhjoR9cJOpspAAAAAElFTkSuQmCC
</value>
  </data>
</root>